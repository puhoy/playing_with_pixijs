{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/createApp.js","webpack:///./src/scripts/spriteWrappers/spriteWrapperBase.ts","webpack:///./src/scripts/maploader.js","webpack:///./src/scripts/hitTestRectangle.ts","webpack:///./src/scripts/spriteWrappers/char.ts","webpack:///./src/scripts/keyboard.js","webpack:///./src/scripts/setup.js","webpack:///./src/scripts/spriteWrappers/item.ts","webpack:///./src/scripts/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","resources","Application","PIXI","type","isWebGLSupported","sayHello","app","width","height","antialias","transparent","resolution","document","body","appendChild","view","Promise","resolve","reject","loader","add","load","createApp","DIRECTION","MapLoader","mapJson","textures","this","tileWidth","tileHeight","tileCountX","tileCountY","collisionMap","tiles","createSprites","x","y","sprites","_getSpritesUnderCoords","sprite","canCollide","layer","tileIndexX","Math","floor","tileIndex","tilesToDraw","collisionLayer","row","tileName","tilePath","getTilePath","tile","_getLocationInArea","area","xStart","yStart","xEnd","yEnd","random","console","error","Array","isArray","items","definition","coords","state","direction","RIGHT","_getSprite","container","addChild","fromFrames","animationSpeed","play","updateLayersOrder","children","sort","a","b","zIndex","animate","texturePath","move","map","moveAndAnimate","collidesWith","spriteWrapper","r1","r2","centerX","centerY","halfWidth","halfHeight","collision","abs","hitTestRectangle","coordsTopLeft","coordsTopRight","coordsBottomRight","coordsBottomLeft","velocity","vx","vy","equipped","anchor","set","scale","angle","LEFT","getCollisions","equip","item","keyboard","isDown","isUp","press","undefined","release","downHandler","event","preventDefault","upHandler","downListener","upListener","addEventListener","unsubscribe","removeEventListener","player","currentMap","App","pivot","aliveObjects","itemsOnMap","left","up","right","down","space","delta","hit","removeChild","xMiddle","yMiddle","xPlayerMiddle","yPlayerMiddle","gameLoop","setup","renderer","particleContainer","wizzard","Char","spawnPlayer","greenStaff","Item","spawnItem","stage","ticker","game"],"mappings":"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","file":"js/app.faf53573.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([118,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as PIXI from \"pixi.js\";\n\nasync function createApp(resources) {\n    let Application = PIXI.Application;\n\n    let type = \"WebGL\";\n    if (!PIXI.utils.isWebGLSupported()) {\n        type = \"canvas\";\n    }\n\n    PIXI.utils.sayHello(type);\n\n//Create a Pixi Application\n    let app = new Application({\n        width: 512,         // default: 800\n        height: 512,        // default: 600\n        antialias: false,    // default: false\n        transparent: false, // default: false\n        resolution: 1       // default: 1\n    });\n\n\n// fill entire window\n    /* app.renderer.view.style.position = \"absolute\";\n     app.renderer.view.style.display = \"block\";\n     app.renderer.autoDensity = true;\n     app.renderer.resize(window.innerWidth, window.innerHeight);\n    */\n//Add the canvas that Pixi automatically created for you to the HTML document\n    document.body.appendChild(app.view);\n\n\n//load a JSON file and run the `setup` function when it's done\n    return new Promise((resolve, reject) => {\n\n        app.loader\n            .add(resources)\n\n            .load(() => resolve(app));\n    });\n}\n\nexport default createApp;\n","import * as PIXI from \"pixi.js\";\nimport hitTestRectangle from \"../hitTestRectangle\";\n\nexport enum DIRECTION {\n    LEFT = 1,\n    RIGHT = -1\n}\n\nexport default class SpriteWrapperBase {\n    textures: any;\n    definition: any;\n    velocity: any;\n    vx: number;\n    vy: number;\n    sprite: any; // \"main\" sprite in this container\n    state: string;\n    container: any;\n    direction: number;\n\n\n    /**\n     *\n     * @param definition  json definition\n     * @param textures\n     * @param coords\n     * @param state\n     */\n    constructor(definition: any, textures: any, coords = [0, 0], state = 'idle') {\n        this.textures = textures;\n        this.definition = definition;\n        this.state = state;\n        this.direction = DIRECTION.RIGHT;\n\n        this.sprite = this._getSprite();\n        this.container = new PIXI.Container();\n        this.container.addChild(this.sprite);\n\n        this.container.x = coords[0];\n        this.container.y = coords[1];\n    }\n\n    _getSprite() {\n        let sprite = PIXI.AnimatedSprite.fromFrames(this.definition['states'][this.state]['textures']);\n        sprite.animationSpeed = this.definition['states'][this.state]['speed'];\n        sprite.play();\n\n        return sprite;\n    }\n\n    updateLayersOrder() {\n        this.container.children.sort(function (a: any, b: any) {\n            a.zIndex = a.zIndex || 0;\n            b.zIndex = b.zIndex || 0;\n            return b.zIndex - a.zIndex\n        });\n    }\n\n    animate() {\n        let textures = [];\n        for (let texturePath of this.definition['states'][this.state]['textures']) {\n            textures.push(this.textures[texturePath]);\n        }\n        this.sprite.textures = textures;\n        this.sprite.animationSpeed = this.definition['states'][this.state]['speed'];\n        this.sprite.play();\n    }\n\n    /**\n     * code to move the sprite\n     *\n     * has to return the new state!\n     *\n     * @param map\n     */\n    move(map: any) {\n        return this.state\n    }\n\n    moveAndAnimate(map: any) {\n        let state = this.move(map);\n\n        if (state !== this.state) {\n            this.state = state;\n            this.animate();\n        }\n    }\n\n    collidesWith(spriteWrapper: SpriteWrapperBase) {\n        return hitTestRectangle(spriteWrapper.container, this.container) // todo: this does not use bounds from spritewrapper yet\n    }\n\n    coordsTopLeft() {\n        return [this.container.x, this.container.y];\n    }\n\n    coordsTopRight() {\n        return [this.container.x + this.container.width, this.container.y];\n    }\n\n    coordsBottomRight() {\n        return [this.container.x + this.container.width, this.container.y + this.container.height];\n    }\n\n    coordsBottomLeft() {\n        return [this.container.x, this.container.y + this.container.height];\n    }\n\n}","import * as PIXI from \"pixi.js\";\n\nexport default class MapLoader {\n    constructor(mapJson, textures) {\n        this.mapJson = mapJson;\n        this.textures = textures;\n\n        this.tileWidth;\n        this.tileHeight;\n        this.tileCountX;\n        this.tileCountY;\n\n        this.collisionMap;\n\n        this.tiles = this.createSprites();\n    }\n\n    getCollisions(x, y) {\n        let sprites = this._getSpritesUnderCoords(x, y);\n        for (let sprite of sprites) {\n            if (sprite && sprite.canCollide) {\n                return true;\n            }\n        }\n        return false;\n\n    }\n\n    _getSpritesUnderCoords(x, y) {\n        //console.log(x, y)\n        let tiles = [];\n        for (let layer of this.collisionMap) {\n            let tileIndexX = Math.floor(x / this.tileWidth);\n            let tileIndexY = Math.floor(y / this.tileHeight);\n\n            let tileIndex = tileIndexY * this.tileCountX + tileIndexX;\n            tiles.push(layer[tileIndex]);\n            //console.log(tileIndexX, tileIndexY, '->', tileIndex)\n        }\n\n        return tiles;\n    }\n\n    createSprites() {\n        let x = 0;\n        let y = 0;\n        this.tileWidth = this.mapJson['tile_dimensions']['width'];\n        this.tileHeight = this.mapJson['tile_dimensions']['height'];\n        this.tileCountY = this.mapJson['layers'][0].length;\n        this.tileCountX = this.mapJson['layers'][0][0].length;\n\n        let tilesToDraw = [];  // just a list to pass to pixi\n        this.collisionMap = [\n            /*\n            [  // list of layers\n              [tile, tile, tile, ...] // first layer\n              [tile, tile, tile, ...] // next layer\n              ...\n            ]\n            * */\n        ];\n        for (let layer of this.mapJson['layers']) {\n            let collisionLayer = [];\n            this.collisionMap.push(collisionLayer);\n\n            for (let row of layer) {\n                for (let tileName of row) {\n                    const tilePath = this.getTilePath(tileName);\n                    if (tilePath) {\n                        let tile = new PIXI.Sprite(\n                            this.textures[tilePath]\n                        );\n                        tile.x = x;\n                        tile.y = y;\n                        tile.canCollide = this.mapJson['can_collide'][tileName] || false;\n\n                        tilesToDraw.push(tile);\n                        collisionLayer.push(tile);\n                    } else {\n                        collisionLayer.push(null);\n                    }\n                    x += this.tileWidth;\n                }\n                x = 0;\n                y += this.tileHeight;\n            }\n            x = 0;\n            y = 0;\n        }\n        return tilesToDraw;\n    }\n\n    /**\n     * return random coords for the player to spawn\n     */\n    spawnPlayer() {\n        return this._getLocationInArea('player_spawn')\n    }\n\n    spawnItem() {\n        return this._getLocationInArea('item_spawn')\n    }\n\n    _getLocationInArea(area) {\n        let xStart = this.mapJson['areas'][area]['x_start'] * this.tileWidth;\n        let yStart = this.mapJson['areas'][area]['y_start'] * this.tileHeight;\n        let xEnd = this.mapJson['areas'][area]['x_end'] * this.tileWidth;\n        let yEnd = this.mapJson['areas'][area]['y_end'] * this.tileHeight;\n\n        let randX = Math.random() * (xEnd - xStart) + xStart;\n        let randY = Math.random() * (yEnd - yStart) + yStart;\n\n        return [randX, randY]\n    }\n\n    getTilePath(name) {\n        const tilePath = this.mapJson['tile_mapping'][name];\n        if (name && !tilePath) {\n            console.error(`cannot find ${name} in mapping!`);\n        }\n        // if its an array, pick a random one!\n        if (Array.isArray(tilePath)) {\n            let items = tilePath;\n            let item = items[Math.floor(Math.random() * items.length)];\n            return item;\n        } else {\n            return tilePath;\n        }\n    }\n\n\n}","import * as PIXI from 'pixi.js'\n\nexport default function hitTestRectangle(r1: any, r2: any) {\n\n    //Calculate `centerX` and `centerY` properties on the sprites\n    r1.centerX = r1.x + r1.width / 2;\n    r1.centerY = r1.y + r1.height / 2;\n    r2.centerX = r2.x + r2.width / 2;\n    r2.centerY = r2.y + r2.height / 2;\n\n    //Calculate the `halfWidth` and `halfHeight` properties of the sprites\n    r1.halfWidth = r1.width / 2;\n    r1.halfHeight = r1.height / 2;\n    r2.halfWidth = r2.width / 2;\n    r2.halfHeight = r2.height / 2;\n\n    //Create a `collision` variable that will tell us\n    //if a collision is occurring\n    let collision = false;\n\n    //Check whether the shapes of the sprites are overlapping. If they\n    //are, set `collision` to `true`\n    if (Math.abs(r1.centerX - r2.centerX) < r1.halfWidth + r2.halfWidth\n        && Math.abs(r1.centerY - r2.centerY) < r1.halfHeight + r2.halfHeight) {\n        collision = true;\n    }\n\n    //Return the value of `collision` back to the main program\n    return collision;\n}","import SpriteWrapperBase, {DIRECTION} from \"./spriteWrapperBase\";\nimport Item from \"./item\";\n\n\nexport default class Char extends SpriteWrapperBase {\n    equipped: Item;\n    container: any;\n\n    constructor(definition: any, textures: any, coords = [0, 0]) {\n        super(definition, textures, coords);\n        this.sprite.zIndex = 0;\n        this.velocity = definition['velocity'];\n        this.vx = 0;\n        this.vy = 0;\n        this.equipped;\n    }\n\n    animate() {\n        super.animate();\n        if (this.equipped) {\n            this.updateLayersOrder();\n\n            this.equipped.sprite.anchor.set(this.direction % 1, 0);\n\n\n            this.equipped.sprite.scale.x = this.direction;\n            this.equipped.sprite.x = this.direction;\n            this.equipped.sprite.zIndex = this.direction; // -1 -> \"behind\" other sprite\n            this.equipped.sprite.angle = 10 * this.direction;\n        }\n    }\n\n\n    move(map: any) {\n        let state = 'idle';\n\n        if (this.vx < 0) {\n            state = 'running';\n            this.direction = DIRECTION.LEFT;\n            this.sprite.scale.x = -1;\n            this.sprite.anchor.set(1, 0);\n            // moving left\n            if (map.getCollisions(...this.coordsBottomLeft()) || map.getCollisions(...this.coordsTopLeft())) {\n                this.vx = 1;\n            }\n        } else if (this.vx > 0) {\n            // right\n            state = 'running';\n            this.direction = DIRECTION.RIGHT;\n            this.sprite.scale.x = 1;\n            this.sprite.anchor.set(0, 0);\n            if (map.getCollisions(...this.coordsBottomRight()) || map.getCollisions(...this.coordsTopRight())) {\n                this.vx = -1;\n            }\n        }\n\n        if (this.vy < 0) {\n            state = 'running';\n            // moving up\n            if (map.getCollisions(...this.coordsTopLeft()) || map.getCollisions(...this.coordsTopRight())) {\n                this.vy = 1;\n            }\n        } else if (this.vy > 0) {\n            state = 'running';\n            if (map.getCollisions(...this.coordsBottomLeft()) || map.getCollisions(...this.coordsBottomRight())) {\n                this.vy = -1;\n            }\n        }\n\n        this.container.x += this.vx;\n        this.container.y += this.vy;\n        return state\n    }\n\n    equip(item: Item) {\n        this.equipped = item;\n        this.equipped.sprite.y = 15;\n        this.container.addChild(item.sprite);\n        this.animate()\n    }\n}","export default function keyboard(value) {\n  let key = {};\n  key.value = value;\n  key.isDown = false;\n  key.isUp = true;\n  key.press = undefined;\n  key.release = undefined;\n  //The `downHandler`\n  key.downHandler = event => {\n    if (event.key === key.value) {\n      if (key.isUp && key.press) key.press();\n      key.isDown = true;\n      key.isUp = false;\n      event.preventDefault();\n    }\n  };\n\n  //The `upHandler`\n  key.upHandler = event => {\n    if (event.key === key.value) {\n      if (key.isDown && key.release) key.release();\n      key.isDown = false;\n      key.isUp = true;\n      event.preventDefault();\n    }\n  };\n\n  //Attach event listeners\n  const downListener = key.downHandler.bind(key);\n  const upListener = key.upHandler.bind(key);\n\n  window.addEventListener(\n    \"keydown\", downListener, false\n  );\n  window.addEventListener(\n    \"keyup\", upListener, false\n  );\n\n  // Detach event listeners\n  key.unsubscribe = () => {\n    window.removeEventListener(\"keydown\", downListener);\n    window.removeEventListener(\"keyup\", upListener);\n  };\n\n  return key;\n}","//Define variables that might be used in more\n//than one function\nimport * as PIXI from \"pixi.js\";\nimport MapLoader from './maploader';\nimport Char from \"./spriteWrappers/char\";\nimport keyboard from \"./keyboard\";\nimport Item from \"./spriteWrappers/item\";\n\nlet textures, state;\n\nlet aliveObjects = [];\nlet itemsOnMap = [];\n\nlet player;\nlet currentMap;\nlet width;\nlet height;\nlet container;\nlet App;\n\nfunction setup(app) {\n    //There are 3 ways to make sprites from textures atlas frames\n    App = app\n    textures = App.loader.resources[\"assets/sprites/dungeon.json\"].textures;\n    let map = new MapLoader(App.loader.resources[\"assets/maps/room.json\"].data, textures);\n    width = App.renderer.width;\n    height = App.renderer.height;\n    container = new PIXI.Container();\n\n    let particleContainer = new PIXI.ParticleContainer();\n    // draw the map\n    for (let tile of map.tiles) {\n        particleContainer.addChild(tile);\n    }\n    container.addChild(particleContainer)\n    currentMap = map;\n\n    let wizzard = new Char(App.loader.resources[\"assets/chars/wizzard.json\"].data, textures, map.spawnPlayer());\n    container.addChild(wizzard.container);\n    aliveObjects.push(wizzard);\n\n    player = wizzard;\n\n    let greenStaff = new Item(App.loader.resources[\"assets/weapons/green_staff.json\"].data, textures, map.spawnItem());\n    container.addChild(greenStaff.container);\n    itemsOnMap.push(greenStaff);\n\n    App.stage.addChild(container);\n\n    //Set the game state\n    state = play;\n    App.ticker.add(delta => gameLoop(delta));\n}\n\n\n//Capture the keyboard arrow keys\nlet left = keyboard(\"ArrowLeft\"),\n    up = keyboard(\"ArrowUp\"),\n    right = keyboard(\"ArrowRight\"),\n    down = keyboard(\"ArrowDown\"),\n    space = keyboard(\"Space\");\n\nlet handleInput = () => {\n    player.vx = 0;\n    player.vy = 0;\n    if (left.isDown && !right.isDown) {\n        player.vx = -player.velocity;\n    }\n    if (!left.isDown && right.isDown) {\n        player.vx = player.velocity;\n    }\n    if (up.isDown && !down.isDown) {\n        player.vy = -player.velocity;\n    }\n    if (!up.isDown && down.isDown) {\n        player.vy = player.velocity;\n    }\n    if(space.isDown) {\n        player.hit = true\n    }\n};\n\n\n/**\n * \"play\" gameloop state\n * @param delta\n */\nlet play = (delta) => {\n\n    handleInput();\n\n    for (let aliveObject of aliveObjects) {\n        aliveObject.moveAndAnimate(currentMap);\n    }\n\n    for (let item of itemsOnMap) {\n        if(item.collidesWith(player)) {\n            player.equip(item)\n            container.removeChild(item.container);\n        }\n    }\n\n    let xMiddle = width / 2;\n    let yMiddle = height / 2;\n    \n    let xPlayerMiddle = player.container.width / 2;\n    let yPlayerMiddle = player.container.height / 2;\n\n    container.x = -player.container.x -xPlayerMiddle + xMiddle;\n    container.y = -player.container.y -yPlayerMiddle + yMiddle;\n};\n\nlet gameLoop = (delta) => {\n    state(delta);\n};\n\n//The `randomInt` helper function\nfunction randomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default setup;","import SpriteWrapperBase from \"./spriteWrapperBase\";\n\n\nexport default class Item extends SpriteWrapperBase {\n    constructor(definition: any, textures: any, coords = [0, 0], state = 'idle') {\n        super(definition, textures, coords, state);\n        this.sprite.anchor.set(0.5);\n        this.sprite.pivot.set(this.sprite.width/2, this.sprite.height/2);\n        this.sprite.angle = Math.random() * 360;\n    }\n}","import '../styles/index.scss';\n\nimport createApp from \"./createApp\";\nimport setup from \"./setup\";\n\nasync function game() {\n    let resources = [\n        \"assets/sprites/dungeon.json\",\n        \"assets/maps/room.json\",\n        \"assets/chars/wizzard.json\",\n        \"assets/weapons/green_staff.json\"\n    ];\n\n    let app = await createApp(resources);\n    setup(app);\n}\n\ngame();"],"sourceRoot":""}